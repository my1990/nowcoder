'''
小易准备去魔法王国采购魔法神器,购买魔法神器需要使用魔法币,但是小易现在一枚魔法币都没有,但是小易有两台魔法机器可以通过投入x(x可以为0)个魔法币产生更多的魔法币。
魔法机器1:如果投入x个魔法币,魔法机器会将其变为2x+1个魔法币
魔法机器2:如果投入x个魔法币,魔法机器会将其变为2x+2个魔法币
小易采购魔法神器总共需要n个魔法币,所以小易只能通过两台魔法机器产生恰好n个魔法币,小易需要你帮他设计一个投入方案使他最后恰好拥有n个魔法币。
输入描述:
输入包括一行,包括一个正整数n(1 ≤ n ≤ 10^9),表示小易需要的魔法币数量。

输出描述:
输出一个字符串,每个字符表示该次小易选取投入的魔法机器。其中只包含字符'1'和'2'。

输入例子1:
10
思路：因为最后要恰好得到n个魔法币，又因为n是10，所以最后一次必定是魔法机器2，且投入的币是4个，所以倒数第二次投入的也必定是魔法机器2，且投入的币是1，所以倒数第三次投的是魔法机器1
'''

#判断一个数是奇数还是偶数，并得原先的数是什么，再递归

def get_num(num):
    if num != 0:
        if num % 2 == 0:
            x = int((num - 2) / 2)
            list.append('2')
            #print('2',x)
        else:
            x = int((num -1) /2)
            list.append('1')
            #print('1', x)
        return get_num(x)
    list.reverse()
    print(''.join(list))


list = []
y = int(input(''))
get_num(y)
